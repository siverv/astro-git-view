---
import BaseLayout from '@layout/BaseLayout.astro';
import {getPathsWithIndexHandling, getRepoMaps} from '@utils/staticPaths';
import RepoHeader from '@components/RepoHeader.astro'
import GitTree from '@components/GitTree.astro';
import GitFile from '@components/GitFile.astro';
import GitPathNotFound from '@components/GitPathNotFound.astro';

const ref = Astro.params.ref || Astro.props.ref;
let path = Astro.params.path || Astro.props.path;

const {refPathMap, pathMap, oidMap} = await getRepoMaps();
path = oidMap.get(path) || path;
let entry = refPathMap?.get(ref)?.get(path || ".");
if(entry == null){
	entry = {
		type: "not_found",
		options: Array.from(pathMap.get(path)?.keys() || [])
	}
}

const View = entry.type === "tree" ? GitTree : entry.type === "blob" ? GitFile : GitPathNotFound;

export const getStaticPaths = async () => await getPathsWithIndexHandling();

---
<BaseLayout>
  <RepoHeader ref={ref} path={path}/>
  <View ref={ref} path={path} entry={entry}/>
</BaseLayout>
