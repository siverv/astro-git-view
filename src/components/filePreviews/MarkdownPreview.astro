---
import { Markdown } from 'astro/components';
import GitBreadcrumbs from '@components/GitBreadcrumbs.astro';
import Bytes from '@components/ui/Bytes.astro';
import RelativeDateTime from '@components/ui/RelativeDateTime.astro'
const {repo, ref, entry: {oid}} = Astro.props;

const log = await repo.getLog(ref);
const blob = await repo.getBlob(oid);
const decoder = new TextDecoder("utf-8");

const {oidMap, refPathMap} = await repo.getStaticHelpers();
const path = oidMap.get(oid);
const history = await repo.getHistory(ref, path);
const latestCommit = history[0];
const content = decoder.decode(blob.blob);
const lines = content.split(/\n/);
const sloc = lines.filter(line => !line.match(/^\s*$/)).length;
const bytes = blob.blob.length;
---
<section class="file-content-section headered-section">
  <header class="headered-section-header">
    <div style="display: inline-block">
      <GitBreadcrumbs {...Astro.props}/>
      <div>
        <span>{lines.length} lines</span>
        <span>({sloc} sloc)</span>
        | 
        <Bytes bytes={bytes}/>
      </div>
    </div>
  </header>
  <div class="markdown-preview ">
    <Markdown>{content}</Markdown>
  </div>
</section>